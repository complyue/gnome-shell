From: Carlos Garnacho <carlosg@gnome.org>
Date: Tue, 18 Sep 2018 12:54:29 +0200
Subject: keyboard: Listen to IbusPanelService::focus-in/out to track focus
 changes

In X11 there's no input panel state requests, so restore the previous behavior
that focused entries would always toggle the OSK on there.

Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/gnome-shell/+bug/1760399
Origin: https://gitlab.gnome.org/GNOME/gnome-shell/merge_requests/239
---
 js/misc/ibusManager.js |  5 +++++
 js/ui/keyboard.js      | 16 ++++++++++++++++
 2 files changed, 21 insertions(+)

diff --git a/js/misc/ibusManager.js b/js/misc/ibusManager.js
index ad2e0fc..33ad877 100644
--- a/js/misc/ibusManager.js
+++ b/js/misc/ibusManager.js
@@ -119,6 +119,11 @@ var IBusManager = new Lang.Class({
                 let cursorLocation = { x, y, width: w, height: h };
                 this.emit('set-cursor-location', cursorLocation);
             });
+            this._panelService.connect('focus-in', (panel, path) => {
+                if (!GLib.str_has_suffix(path, '/InputContext_1'))
+                    this.emit ('focus-in');
+            });
+            this._panelService.connect('focus-out', () => { this.emit('focus-out'); });
 
             try {
                 // IBus versions older than 1.5.10 have a bug which
diff --git a/js/ui/keyboard.js b/js/ui/keyboard.js
index 4a923ad..7dba1a8 100644
--- a/js/ui/keyboard.js
+++ b/js/ui/keyboard.js
@@ -512,6 +512,12 @@ var FocusTracker = new Lang.Class({
 
             this._setCurrentRect(rect);
         });
+        this._ibusManager.connect('focus-in', () => {
+            this.emit('focus-changed', true);
+        });
+        this._ibusManager.connect('focus-out', () => {
+            this.emit('focus-changed', false);
+        });
     },
 
     get currentWindow() {
@@ -594,6 +600,16 @@ var Keyboard = new Lang.Class({
             this._animFocusedWindow = null;
             this._oskFocusWindow = null;
         });
+        this._focusTracker.connect('focus-changed', (tracker, focused) => {
+            // Valid only for X11
+            if (Meta.is_wayland_compositor())
+                return;
+
+            if (focused)
+                this.show(Main.layoutManager.focusIndex);
+            else
+                this.hide();
+        });
 
         Meta.get_backend().connect('last-device-changed', 
             (backend, deviceId) => {
