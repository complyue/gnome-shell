From: =?utf-8?q?Florian_M=C3=BCllner?= <fmuellner@gnome.org>
Date: Fri, 23 Feb 2018 23:58:22 +0100
Subject: volume: Add back sound feedback on scroll

Commit 8d4855f1008 accidentally removed the volume change feedback
for scroll events. Add it back to be consistent again with moving
the slider via arrow keys, slider drags/clicks and gsd's media keys
handling.

https://gitlab.gnome.org/GNOME/gnome-shell/issues/53

volume: Only emit sound feedback after volume changes

gnome-settings-daemon doesn't play the volume change sound when
the volume stayed the same (that is, it is already at its maximum
or minimum). This looks like the right thing to do, so copy its
behavior.

https://gitlab.gnome.org/GNOME/gnome-shell/issues/53

slider: Stop emulating drags in key handling

Emitting ::drag-end after changing the slider value via arrow keys
was a cheap way to make the sound feedback work for keyboard input.
But now that the volume indicator plays the sound on ::value-changed
as well, we can stop doing that - after all, key presses aren't drags.

Besides that, this will make the limiting of feedback to actual volume
changes from the previous commit work for key events as well.

https://gitlab.gnome.org/GNOME/gnome-shell/issues/53

Bug-GNOME: https://gitlab.gnome.org/GNOME/gnome-shell/issues/53
Forwarded: yes, https://gitlab.gnome.org/GNOME/gnome-shell/merge_requests/51
---
 js/ui/slider.js        |  2 --
 js/ui/status/volume.js | 20 +++++++++++++++++++-
 2 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/js/ui/slider.js b/js/ui/slider.js
index 9853929..30295b4 100644
--- a/js/ui/slider.js
+++ b/js/ui/slider.js
@@ -232,9 +232,7 @@ var Slider = new Lang.Class({
             let delta = key == Clutter.KEY_Right ? 0.1 : -0.1;
             this._value = Math.max(0, Math.min(this._value + delta, 1));
             this.actor.queue_repaint();
-            this.emit('drag-begin');
             this.emit('value-changed', this._value);
-            this.emit('drag-end');
             return Clutter.EVENT_STOP;
         }
         return Clutter.EVENT_PROPAGATE;
diff --git a/js/ui/status/volume.js b/js/ui/status/volume.js
index 65c4c42..de5f188 100644
--- a/js/ui/status/volume.js
+++ b/js/ui/status/volume.js
@@ -3,7 +3,9 @@
 const Clutter = imports.gi.Clutter;
 const Lang = imports.lang;
 const Gio = imports.gi.Gio;
+const GLib = imports.gi.GLib;
 const Gvc = imports.gi.Gvc;
+const Mainloop = imports.mainloop;
 const St = imports.gi.St;
 const Signals = imports.signals;
 
@@ -36,9 +38,16 @@ var StreamSlider = new Lang.Class({
 
         this.item = new PopupMenu.PopupBaseMenuItem({ activate: false });
 
+        this._inDrag = false;
+        this._notifyVolumeChangeId = 0;
+
         this._slider = new Slider.Slider(0);
+        this._slider.connect('drag-begin', () => { this._inDrag = true; });
         this._slider.connect('value-changed', this._sliderChanged.bind(this));
-        this._slider.connect('drag-end', this._notifyVolumeChange.bind(this));
+        this._slider.connect('drag-end', () => {
+            this._inDrag = false;
+            this._notifyVolumeChange();
+        });
 
         this._icon = new St.Icon({ style_class: 'popup-menu-icon' });
         this.item.actor.add(this._icon);
@@ -135,6 +144,7 @@ var StreamSlider = new Lang.Class({
 
         let volume = value * this._get_control_max_volume();
         let prevMuted = this._stream.is_muted;
+        let prevVolume = this._stream.volume;
         if (volume < 1) {
             this._stream.volume = 0;
             if (!prevMuted)
@@ -145,6 +155,14 @@ var StreamSlider = new Lang.Class({
                 this._stream.change_is_muted(false);
         }
         this._stream.push_volume();
+
+        let volumeChanged = this._stream.volume != prevVolume;
+        if (volumeChanged && !this._notifyVolumeChangeId && !this._inDrag)
+            this._notifyVolumeChangeId = Mainloop.timeout_add(30, () => {
+                this._notifyVolumeChange();
+                this._notifyVolumeChangeId = 0;
+                return GLib.SOURCE_REMOVE;
+            });
     },
 
     _notifyVolumeChange() {
