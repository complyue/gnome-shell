Description: Enable GL/GLX bits conditionally
 This avoids a build failure on arm{el,hf} where cogl uses GLES
Author: Michael Biebl <biebl@debian.org>
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=670850
Index: gnome-shell-3.5.92/configure.ac
===================================================================
--- gnome-shell-3.5.92.orig/configure.ac	2012-09-19 08:37:54.468936604 -0400
+++ gnome-shell-3.5.92/configure.ac	2012-09-19 08:37:58.052936454 -0400
@@ -50,7 +50,7 @@
    AC_MSG_RESULT(yes)
    build_recorder=true
    recorder_modules="gstreamer-1.0 gstreamer-base-1.0 x11"
-   PKG_CHECK_MODULES(TEST_SHELL_RECORDER, $recorder_modules clutter-1.0 xfixes gl)
+   PKG_CHECK_MODULES(TEST_SHELL_RECORDER, $recorder_modules clutter-1.0 xfixes)
 else
    AC_MSG_RESULT(no)
 fi
@@ -84,7 +84,6 @@
 			       libgnome-menu-3.0 >= $GNOME_MENUS_REQUIRED_VERSION
                                $recorder_modules
                                gdk-x11-3.0 libsoup-2.4
-                               gl
 			       clutter-x11-1.0 >= $CLUTTER_MIN_VERSION
 			       clutter-glx-1.0 >= $CLUTTER_MIN_VERSION
                                libstartup-notification-1.0 >= $STARTUP_NOTIFICATION_MIN_VERSION
@@ -106,6 +105,16 @@
 GNOME_KEYBINDINGS_KEYSDIR=`$PKG_CONFIG --variable keysdir gnome-keybindings`
 AC_SUBST([GNOME_KEYBINDINGS_KEYSDIR])
 
+PKG_CHECK_MODULES(GLX, [gl], [have_glx=yes], [have_glx=no])
+if test "x$have_glx" = "xyes"; then
+   GNOME_SHELL_CFLAGS="$GNOME_SHELL_CFLAGS $GLX_CFLAGS"
+   GNOME_SHELL_LIBS="$GNOME_SHELL_LIBS $GLX_LIBS"
+   TEST_SHELL_RECORDER_CFLAGS="$TEST_SHELL_RECORDER_CFLAGS $GLX_CFLAGS"
+   TEST_SHELL_RECORDER_LIBS="$TEST_SHELL_RECORDER_LIBS $GLX_LIBS"
+   AC_DEFINE(HAVE_GLX, [1], [Define if we have GLX])
+   AC_SUBST([HAVE_GLX], [1])
+fi
+
 GOBJECT_INTROSPECTION_CHECK([$GOBJECT_INTROSPECTION_MIN_VERSION])
 
 saved_CFLAGS=$CFLAGS
Index: gnome-shell-3.5.92/src/gnome-shell-plugin.c
===================================================================
--- gnome-shell-3.5.92.orig/src/gnome-shell-plugin.c	2012-09-19 08:37:54.468936604 -0400
+++ gnome-shell-3.5.92/src/gnome-shell-plugin.c	2012-09-19 08:37:58.052936454 -0400
@@ -30,8 +30,10 @@
 
 #include <clutter/clutter.h>
 #include <clutter/x11/clutter-x11.h>
+#ifdef HAVE_GLX
 #include <GL/glx.h>
 #include <GL/glxext.h>
+#endif
 #include <gjs/gjs.h>
 #include <meta/display.h>
 #include <meta/meta-plugin.h>
@@ -139,14 +141,17 @@
 gnome_shell_plugin_start (MetaPlugin *plugin)
 {
   GnomeShellPlugin *shell_plugin = GNOME_SHELL_PLUGIN (plugin);
+#ifdef HAVE_GLX
   MetaScreen *screen;
   MetaDisplay *display;
   Display *xdisplay;
+  const char *glx_extensions;
+#endif
   GError *error = NULL;
   int status;
-  const char *glx_extensions;
   GjsContext *gjs_context;
 
+#ifdef HAVE_GLX
   screen = meta_plugin_get_screen (plugin);
   display = meta_screen_get_display (screen);
 
@@ -159,6 +164,9 @@
   glx_extensions = glXQueryExtensionsString (xdisplay,
                                              meta_screen_get_screen_number (screen));
   shell_plugin->have_swap_event = strstr (glx_extensions, "GLX_INTEL_swap_event") != NULL;
+#else
+  shell_plugin->have_swap_event = 0;
+#endif
 
   shell_perf_log_define_event (shell_perf_log_get_default (),
                                "glx.swapComplete",
Index: gnome-shell-3.5.92/src/shell-screen-grabber.c
===================================================================
--- gnome-shell-3.5.92.orig/src/shell-screen-grabber.c	2012-09-19 08:37:54.468936604 -0400
+++ gnome-shell-3.5.92/src/shell-screen-grabber.c	2012-09-19 08:37:58.052936454 -0400
@@ -1,21 +1,27 @@
 /* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
 
+#include "config.h"
+
 #include <string.h>
 
 #include <clutter/clutter.h>
 #include <cogl/cogl.h>
+#ifdef HAVE_GLX
 #include <GL/gl.h>
 #include <GL/glx.h>
 #include <GL/glext.h>
+#endif
 
 #include "shell-screen-grabber.h"
 
+#ifdef HAVE_GLX
 PFNGLBINDBUFFERARBPROC pf_glBindBufferARB;
 PFNGLBUFFERDATAARBPROC pf_glBufferDataARB;
 PFNGLDELETEBUFFERSARBPROC pf_glDeleteBuffersARB;
 PFNGLGENBUFFERSARBPROC pf_glGenBuffersARB;
 PFNGLMAPBUFFERARBPROC pf_glMapBufferARB;
 PFNGLUNMAPBUFFERARBPROC pf_glUnmapBufferARB;
+#endif
 
 struct _ShellScreenGrabberClass
 {
@@ -39,8 +45,10 @@
 {
   ShellScreenGrabber *grabber = SHELL_SCREEN_GRABBER (gobject);
 
+#ifdef HAVE_GLX
   if (grabber->pixel_buffer != 0)
     pf_glDeleteBuffersARB (1, &grabber->pixel_buffer);
+#endif
 }
 
 static void
@@ -95,6 +103,7 @@
   data_size = row_bytes * height;
   data = g_malloc (data_size);
 
+#ifdef HAVE_GLX
   if (grabber->have_pixel_buffers == -1)
     {
       const GLubyte* extensions = glGetString (GL_EXTENSIONS);
@@ -198,6 +207,7 @@
         glPixelStorei (GL_PACK_INVERT_MESA, old_pack_invert);
     }
   else
+#endif /* HAVE_GLX */
     {
       cogl_read_pixels (x, y,
                         width, height,
